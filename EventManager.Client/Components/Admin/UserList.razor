<table class="container">
    <thead>
        <tr>
            <th>Username</th>
            <th>Role</th>
            <th>Created At</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Users)
        {
            <tr class="bgc">
                <td>@user.Username</td>
                <td>@user.Role</td>
                <td>@user.CreatedAt</td>

                <td class="">
                    <button class="btn btn-danger" @onclick="(() => OnEdit.InvokeAsync(user.Id))">Delete user</button>
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    // EventList takes a list of event objects as parameter to be displayed
    [Parameter]
    public List<User> Users { get; set; } = [];

    // Callback that is called when the user clicks the Edit button for an event.
    // This callback takes the event ID as a parameter and can be used to handle
    // editing of the event in the parent component.
    [Parameter]
    public EventCallback<string> OnEdit { get; set; }

}
